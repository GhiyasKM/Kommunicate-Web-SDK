steps:
  # Step 1: Install dependencies
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']

  # Step 2: Conditionally run different builds based on BUILD_ENV
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Build env:" $BUILD_ENV
        if [ "${BUILD_ENV}" = "test" ]; then npm run build-test;
        elif [ "${BUILD_ENV}" = "release" ]; then npm run build-release;
        elif [ "${BUILD_ENV}" = "staging" ]; then npm run build-staging;
        elif [ "${BUILD_ENV}" = "prod" ]; then npm run build-prod;
        elif [ "${BUILD_ENV}" = "prod-enterprise" ]; then npm run build-prod-enterprise;
        elif [ "${BUILD_ENV}" = "prod-in" ]; then npm run build-prod-in;
        elif [ "${BUILD_ENV}" = "prod-eu" ]; then npm run build-prod-eu;
        elif [ "${BUILD_ENV}" = "prod-cn" ]; then npm run build-prod-cn;
        elif [ "${BUILD_ENV}" = "prod_beta" ]; then npm run build-beta;
        else npm run build-test;
        fi

  # Step 3: Deploy to Firebase Hosting
  - name: 'gcr.io/cloud-builders/firebase'
    args: ['deploy', '--only', 'hosting', '--token', '${_FIREBASE_TOKEN}']

artifacts:
  # Specify the directory where your build outputs are located
  objects:
    location: 'webplugin/build'  # Same as your AWS Amplify baseDirectory
    paths: ['**/*']

# Set the Firebase token as a substitution (either in the Cloud Console or .env)
substitutions:
  _FIREBASE_TOKEN: '${FIREBASE_TOKEN}'
